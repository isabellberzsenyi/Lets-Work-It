{"version":3,"sources":["components/workout-form.jsx","components/home.jsx","components/routine-section.jsx","info.jsx","components/set.jsx","components/workout-routine.jsx","components/oops.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["WorkoutForm","history","useHistory","useState","type","setType","length","setLength","difficulty","setDifficulty","group","setGroup","dumbbells","setDumbbells","valid","setValid","validateForm","showError","section","errorMessage","className","a","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","push","Form","style","textAlign","fontWeight","color","textShadow","FormGroup","tag","Label","check","Input","name","onClick","width","onChange","event","target","value","checked","disabled","display","alignItems","justifyContent","id","sendData","Home","RoutineSection","props","fontSize","title","sectionDescription","marginLeft","bullets","map","bullet","warmUpText","warmUpExercises","coolDownText","coolDownExercises","intervalText","circuitText","Set","capitalize","str","charAt","toUpperCase","slice","workout_type","setNum","exercises","reps","content","i","getExerciseContent","WorkoutResult","workoutType","setWorkoutType","setExercises","setReps","setSets","useEffect","res","data","sets","Oops","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14ad9d44.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, FormGroup, Input, Label, Alert } from \"reactstrap\";\nimport Button from \"reactstrap/lib/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst WorkoutForm = () => {\n  let history = useHistory();\n  const [type, setType] = useState(null);\n  const [length, setLength] = useState(\"30\");\n  const [difficulty, setDifficulty] = useState(null);\n  const [group, setGroup] = useState(null);\n  const [dumbbells, setDumbbells] = useState(null);\n  const [valid, setValid] = useState(true);\n\n  function validateForm() {\n    if (type === \"interval\") {\n      return length != null && group != null;\n    } else if (type === \"circuit\") {\n      return difficulty != null && group != null;\n    } else {\n      return false;\n    }\n  }\n\n  function showError(section) {\n    let errorMessage = \"\";\n    switch (section) {\n      case \"type\":\n        errorMessage = \"workout type\";\n        break;\n      case \"difficulty\":\n        errorMessage = \"difficulty level\";\n        break;\n      case \"group\":\n        errorMessage = \"muscle group\";\n        break;\n      default:\n        errorMessage = \"\";\n        break;\n    }\n    return !valid ? (\n      <div className='col-sm-6'>\n        <p className='error'>Please select a {errorMessage}!</p>\n      </div>\n    ) : null;\n  }\n\n  async function sendData() {\n    if (validateForm()) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          type: type,\n          length: length,\n          difficulty: difficulty,\n          group: group,\n          dumbbells: dumbbells,\n        }),\n      };\n      try {\n        await fetch(\"/send\", requestOptions).then((response) => response.json());\n      } catch (e) {\n        history.push(\"/oops\");\n        return;\n      }\n\n      history.push(\"/workout\");\n    } else {\n      setValid(false);\n    }\n  }\n\n  return (\n    <div>\n      <Form className='workout-form'>\n        <h2\n          style={{\n            textAlign: \"center\",\n            fontWeight: \"bold\",\n            color: \"#ffb535\",\n            textShadow:\n              \"-1px -1px 0 #fff6d9, 1px -1px 0 #fff6d9, -1px 1px 0 #fff6d9, 1px 1px 0 #fff6d9\",\n          }}>\n          Let's get to it\n        </h2>\n        <FormGroup tag='fieldset' className='form-group'>\n          <Label className='form-labels'>Choose your Workout Type:</Label>\n          <FormGroup check>\n            <Label check className='labels'>\n              <Input\n                type='radio'\n                name='type'\n                className='opt'\n                onClick={() => {\n                  setType(\"interval\");\n                  setGroup(\"full-body\");\n                }}\n              />\n              Interval\n            </Label>\n            <Label check className='labels'>\n              <Input type='radio' name='type' className='opt' onClick={() => setType(\"circuit\")} />\n              Circuit\n            </Label>\n          </FormGroup>\n          {type === null && showError(\"type\")}\n        </FormGroup>\n        {type === \"interval\" && (\n          <FormGroup className='form-group'>\n            <Label className='form-labels'>Choose your Workout Length:</Label>\n            <Input\n              style={{ width: \"50%\" }}\n              type='select'\n              name='length'\n              onChange={(event) => {\n                setLength(event.target.value);\n              }}>\n              <option value='30'>30 mins</option>\n              <option value='35'>35 mins</option>\n              <option value='40'>40 mins</option>\n              <option value='45'>45 mins</option>\n            </Input>\n          </FormGroup>\n        )}\n        {type === \"circuit\" && (\n          <FormGroup className='form-group'>\n            <Label className='form-labels'>Choose your Workout Difficulty:</Label>\n            <FormGroup check>\n              <Label check className='labels'>\n                <Input\n                  type='radio'\n                  name='difficulty'\n                  className='opt'\n                  onClick={() => setDifficulty(\"easy\")}\n                />\n                Easy\n              </Label>\n              <Label check className='labels'>\n                <Input\n                  type='radio'\n                  name='difficulty'\n                  className='opt'\n                  onClick={() => setDifficulty(\"medium\")}\n                />\n                Medium\n              </Label>\n              <Label check className='labels'>\n                <Input\n                  type='radio'\n                  name='difficulty'\n                  className='opt'\n                  style={{ color: \"red\" }}\n                  onClick={() => setDifficulty(\"difficult\")}\n                />\n                Hard\n              </Label>\n            </FormGroup>\n            {difficulty === null && showError(\"difficulty\")}\n          </FormGroup>\n        )}\n        <FormGroup className='form-group'>\n          <Label className='form-labels'>Choose your Muscle Group:</Label>\n          <FormGroup check>\n            <Label check className='labels'>\n              <Input\n                type='radio'\n                name='group'\n                className='opt'\n                checked={type === \"interval\" || group === \"full-body\"}\n                onChange={() => setGroup(\"full-body\")}\n              />\n              Full Body\n            </Label>\n            <Label check className='labels'>\n              <Input\n                type='radio'\n                name='group'\n                className='opt'\n                disabled={type === \"interval\"}\n                onChange={() => setGroup(\"upper-body\")}\n              />\n              Upper Body\n            </Label>\n            <Label check className='labels'>\n              <Input\n                type='radio'\n                name='group'\n                className='opt'\n                disabled={type === \"interval\"}\n                onChange={() => setGroup(\"lower-body\")}\n              />\n              Lower Body\n            </Label>\n          </FormGroup>\n          {group === null && showError(\"group\")}\n        </FormGroup>\n        <FormGroup check>\n          <Label check className='labels'>\n            <Input type='checkbox' onClick={() => setDumbbells(!dumbbells)} />\n            Use Dumbbells\n          </Label>\n        </FormGroup>\n        <FormGroup\n          check\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}>\n          <Button id='form-button' onClick={() => sendData()}>\n            Work It\n          </Button>\n        </FormGroup>\n      </Form>\n    </div>\n  );\n};\n\nexport default WorkoutForm;\n","import React from \"react\";\nimport WorkoutForm from \"./workout-form.jsx\";\n\nconst Home = () => {\n  return (\n    <div className='container component'>\n      <div className='row'>\n        <div className='col-md-6 col-md-offset-3'>\n          <p>\n            It can be daunting to create your own workout, and we all know it’d be way easier if\n            someone just told you what muscles to work out. That’s why we have <b>Work It!</b> Work\n            It allows you chose your workout settings and in return get a personalized workout,\n            including recommendations for your warm up and cool down.\n          </p>\n        </div>\n      </div>\n      <div className='row'>\n        <div className='col-md-8 col-md-offset-2'>\n          <WorkoutForm />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst RoutineSection = (props) => {\n  return (\n    <div>\n      <div className='row'>\n        <div className='col-sm-12'>\n          <h5 style={{ fontSize: \"32px\" }}>{props.title}</h5>\n        </div>\n      </div>\n      <div className='row'>\n        <div className='col-sm-12' id='section-description'>\n          {props.sectionDescription}\n        </div>\n      </div>\n      <div className='row'>\n        <div className='col-sm-10'>\n          <ul className='list-item' style={{ marginLeft: \"1em\" }}>\n            {props.bullets.map((bullet) => (\n              <li>\n                <p>{bullet}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoutineSection;\n","export const warmUpText = (\n  <p>\n    Before starting your workout it’s important to loosen your muscles and increase your blood flow\n    to your muscles. Taking time to warm up will help lower injury risks and alleviate potential\n    muscle soreness.&nbsp;\n    <b>\n      Different warm up exercises work for different people, here is one to try out complete 8 of\n      each of the following.\n    </b>\n  </p>\n);\n\nexport const warmUpExercises = [\n  \"Inward and Outward hip rotations\",\n  \"Forward and Backward arm circles\",\n  \"Walk outs\",\n  \"Deep reverse lunges to knee raise\",\n  \"I-arm raises\",\n  \"Y-arm raises\",\n];\n\nexport const coolDownText = (\n  <p>\n    Similar to warming up, taking time to cool down allows your body to return to a resting state.\n    In addition, stretching your muscles will reduce lactic acid build up which will help with\n    muscle cramps, stiffness and soreness.&nbsp;\n    <b>\n      Different cool down exercises work for different people, here is one to try out, hold each\n      pose for 30-45 seconds.\n    </b>\n  </p>\n);\n\nexport const coolDownExercises = [\n  \"Child’s pose\",\n  \"Downward facing dog\",\n  \"Butterfly pose\",\n  \"Quad stretch\",\n  \"Head-to-knee forward bend\",\n  \"Upper body arm stretch\",\n];\n\nexport const intervalText = (\n  <p>\n    An interval workout consists of short, high intensity bursts of activity with recovery in\n    between. For this workout you will&nbsp;\n    <b>\n      do each exercise for 4 mins: 30 seconds on, 10 seconds off, repeated 6 times, then rest for 1\n      minute before repeating for each other exercise.\n    </b>\n  </p>\n);\n\nexport const circuitText = (\n  <p>\n    A circuit workout consists of&nbsp;\n    <b>\n      completing all of the exercises for their number of repetitions, then repeating the full cycle\n      for the number of sets specified.&nbsp;\n    </b>\n    Take breaks and rests as needed.\n  </p>\n);\n","import React, { useState } from \"react\";\nimport { intervalText, circuitText } from \"../info\";\n\nconst Set = (props) => {\n  const [toolTipOpen, setToolTipOpen] = useState(false);\n  const toggle = () => setToolTipOpen(!toolTipOpen);\n\n  const capitalize = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const getExerciseContent = (exercises, reps) => {\n    let content = [];\n    for (let i = 0; i < exercises.length; i++) {\n      if (props.workout_type === \"circuit\") {\n        content.push(\n          <li>\n            <p>\n              Exercise {i + 1}: {capitalize(exercises[i])} ({reps[i]} reps)\n            </p>\n          </li>\n        );\n      } else {\n        content.push(\n          <li>\n            <p>\n              Exercise {i + 1}: {capitalize(exercises[i])}\n            </p>\n          </li>\n        );\n      }\n    }\n    return content;\n  };\n  return (\n    <div>\n      <div className='row'>\n        <div className='col-sm-12'>\n          <h5 style={{ fontSize: \"32px\" }}> {capitalize(props.workout_type)} Workout</h5>\n        </div>\n      </div>\n      <div className='row'>\n        {props.workout_type === \"circuit\" ? (\n          <div className='col-sm-12' id='section-description'>\n            {circuitText}\n            <h4 className='set'>Complete {props.setNum} Sets of:</h4>\n          </div>\n        ) : (\n          <div className='col-sm-12' id='section-description'>\n            {intervalText}\n          </div>\n        )}\n      </div>\n      <div className='row'>\n        <div className='col-sm-10'>\n          <ul className='list-item' style={{ marginLeft: \"1em\" }}>\n            {getExerciseContent(props.exercises, props.reps)}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Set;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"reactstrap/lib/Button\";\nimport RoutineSection from \"./routine-section.jsx\";\nimport Set from \"./set.jsx\";\nimport { useHistory } from \"react-router-dom\";\nimport { warmUpText, warmUpExercises, coolDownText, coolDownExercises } from \"../info\";\n\nconst WorkoutResult = () => {\n  let history = useHistory();\n  const [workoutType, setWorkoutType] = useState();\n  const [exercises, setExercises] = useState([]);\n  const [reps, setReps] = useState([]);\n  const [sets, setSets] = useState(0);\n\n  useEffect(async () => {\n    await fetch(\"/result\")\n      .then((res) => res.json())\n      .then((data) => {\n        setWorkoutType(data.workout_type);\n        setExercises(data.exercises);\n        setReps(data.reps);\n        setSets(data.sets);\n      });\n  }, []);\n\n  return (\n    <div className='container component'>\n      <div className='row'>\n        <div className='col-sm-2 col-sm-offset-1'>\n          <Button id='back-button' onClick={() => history.push(\"/\")}>\n            Back\n          </Button>\n        </div>\n        <div className='col-sm-6'>\n          <p>Here's your personalized type group workout!</p>\n        </div>\n      </div>\n      <div className='row'>\n        <div className='col-sm-8 col-sm-offset-2 workout-result'>\n          <RoutineSection\n            title='Warm Up'\n            sectionDescription={warmUpText}\n            bullets={warmUpExercises}\n          />\n          {workoutType === \"circuit\" && (\n            <Set workout_type={workoutType} setNum='3' exercises={exercises} reps={reps} />\n          )}\n          {workoutType === \"interval\" && <Set workout_type={workoutType} exercises={exercises} />}\n          <RoutineSection\n            title='Cool Down'\n            sectionDescription={coolDownText}\n            bullets={coolDownExercises}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkoutResult;\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Oops = () => {\n  let history = useHistory();\n  return (\n    <div>\n      <div className='row'>\n        <div className='col-sm-8 col-sm-offset-2'>\n          <h3>Oh no, something went wrong!</h3>\n          <p>Please try again later.</p>\n          <Button\n            id='form-button'\n            onClick={() => {\n              history.push(\"/\");\n            }}>\n            Back Home\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Oops;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Home from \"./components/home.jsx\";\nimport WorkoutResult from \"./components/workout-routine.jsx\";\nimport Oops from \"./components/oops.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n  return (\n    <div className='App' id='bootstrap-overrides'>\n      <header className='App-header'>\n        <div className='col-md-6'>Work It</div>\n      </header>\n      <BrowserRouter>\n        <div className='Site-content'>\n          <Switch>\n            <Route path='/' component={Home} exact />\n            <Route path='/workout' component={WorkoutResult} exact />\n            <Route component={Oops} exact />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}